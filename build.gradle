
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = 'sponge'
            url = 'http://repo.spongepowered.org/maven'
        }
    }

    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

repositories {
    maven {
        url 'https://masa.dy.fi/maven'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'

ext.configFile = file "build.properties"

configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = config.mod_version
group = config.group + "." + config.mod_id
archivesBaseName = config.mod_id + '-' + config.minecraft_version

minecraft {
    version = "${config.minecraft_version}-${config.forge_version}";
    mappings = config.mappings_version
    runDir = 'minecraft'
    makeObfSourceJar = false

    ext.mod_version = config.mod_version

    if (mod_version.endsWith('-dev')) {
        mod_version = mod_version + "." + new Date().format('yyyyMMdd.HHmmss')
    }

    replaceIn "Reference.java"
    replace "@MOD_VERSION@", mod_version
}

dependencies {
    //lol hacks
    deobfCompile "fi.dy.masa.malilib:malilib-" +"1.12.0" + ":" + config.malilib_version + ":deobf"
}

sourceSets {
    main {
        ext.refMap = 'mixins.' + config.mod_id + '.refmap.json'
    }
}

/**
 * This section allows you to customise the generated litemod.json file
litemod {
    json {
        name = config.mod_id
        displayName = config.mod_name
        mcversion = config.minecraft_version
        version = config.mod_version
        author = config.author

        // Uncomment any of the following lines and fill in your own details as required
        //requiredAPIs = [ 'someapi' ]
        //tweakClass = 'name.of.tweaker.here'
        dependsOn = [ 'malilib' ]
        mixinConfigs = [ 'mixins.' + config.mod_id + '.json' ]
    }
}
 */

mixin {
    defaultObfuscationEnv notch
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "mod_version", project.minecraft.mod_version
    inputs.property "minecraft_version", project.config.minecraft_version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'mod_version': project.minecraft.mod_version, 'minecraft_version': project.config.minecraft_version
    }
      
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
